---
name: CI

"on":
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  PYTHONUNBUFFERED: 1
  FORCE_COLOR: 1

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        # Allow Python 3.13 to fail temporarily while ecosystem catches up
        include:
          - python-version: "3.13"
            experimental: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          allow-prereleases: ${{ matrix.python-version == '3.13' }}

      - name: Install dependencies
        uses: ./.github/actions/setup-python-deps

      - name: Install Python 3.13 specific requirements
        if: matrix.python-version == '3.13'
        run: |
          pip install -r requirements-py313.txt || echo "Python 3.13 requirements failed, using fallback"

      - name: Run Python 3.13 compatibility test
        if: matrix.python-version == '3.13'
        run: |
          python scripts/test_python313.py

      - name: Run tests
        run: |
          # Note: pytest-timeout is installed via requirements-dev.txt
          pytest --maxfail=5 --tb=short --timeout=300 --cov=versiontracker --cov-report=xml
        continue-on-error: ${{ matrix.experimental == true }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint and Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        uses: ./.github/actions/setup-python-deps

      - name: Run linting
        run: |
          ruff check .
          ruff format --check .

      - name: Run type checking
        run: |
          mypy versiontracker

      - name: Run security checks
        run: |
          bandit -c .bandit -r versiontracker/

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel

      - name: Build package
        run: |
          python -m build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-packages
          path: dist/
